<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>장바구니 테스트</title>
    <!-- 부트스트랩 CSS 링크 추가 -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
<div class="container mt-5">
    <h1 class="text-center">장바구니 테스트</h1>

    <!-- 장바구니 목록을 표시 -->
    <table class="table">
        <!-- 장바구니 목록을 표시 -->
        <table class="table">
            <thead>
            <tr>
                <th>상품 코드</th>
                <th>카테고리</th>
                <th>상품명</th>
                <th>가격</th>
                <th>수량</th>
                <th>합계</th>
            </tr>
            </thead>
            <tbody>
            {{#cartItems}}
                <tr>
                    <td>{{product.Pro_Code}}</td>
                    <td>{{product.Category.Cate_Name}}</td>
                    <td>{{product.Pro_Name}}</td>
                    <td>{{product.Pro_Price}}원</td>
                    <td>
                        <button class="btn btn-sm btn-secondary" onclick="decrementQuantity(this)">-</button>
                        <span class="quantity">1</span>
                        <button class="btn btn-sm btn-secondary" onclick="incrementQuantity(this)">+</button>
                    </td>
                    <td>0원</td>
                </tr>
            {{/cartItems}}
            </tbody>
        </table>


        <!-- 전체 합계 표시 -->
    <div class="text-right">
        <strong>전체 합계: <span id="totalPrice">0원</span></strong>
    </div>
    <button class="btn btn-primary" onclick="redirectToOrderPage()">구매</button>
</div>

<script>
    function redirectToOrderPage() {
        // 클릭 시 주문 정보 입력 페이지로 이동
        window.location.href = '/orders/orderMain'; // 주문 정보 입력 페이지의 URL로 변경
    }

    // 수량 증가 함수
    function incrementQuantity(button) {
        const quantitySpan = button.nextElementSibling;
        let quantity = parseInt(quantitySpan.textContent);
        quantity++;
        quantitySpan.textContent = quantity;
        updateTotalPrice();
    }

    // 수량 감소 함수
    function decrementQuantity(button) {
        const quantitySpan = button.nextElementSibling;
        let quantity = parseInt(quantitySpan.textContent);
        if (quantity > 1) {
            quantity--;
            quantitySpan.textContent = quantity;
            updateTotalPrice();
        }
    }

    // 장바구니 항목의 합계를 계산하고 전체 합계를 업데이트
    function updateTotalPrice() {
        const rows = document.querySelectorAll('tbody tr');
        let totalPrice = 0;

        rows.forEach(row => {
            const priceCell = row.querySelector('td:nth-child(2)');
            const quantityCell = row.querySelector('.quantity');
            const totalPriceCell = row.querySelector('td:nth-child(4)');

            const price = parseInt(priceCell.textContent);
            const quantity = parseInt(quantityCell.textContent);
            const itemTotal = price * quantity;

            totalPrice += itemTotal;
            totalPriceCell.textContent = itemTotal + '원';
        });

        // 전체 합계 업데이트
        document.getElementById('totalPrice').textContent = totalPrice + '원';
    }

    // 페이지 로드 시 전체 합계 계산
    updateTotalPrice();
</script>

</body>
</html>
